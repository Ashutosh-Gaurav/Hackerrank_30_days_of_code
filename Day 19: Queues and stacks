#include<bits/stdc++.h>

using namespace std;

class Solution
{
    private:
    stack<char> Stack;
    queue<char> Queue;
    public:
    void pushCharacter(char c)
    {
        Stack.push(c);
    }
    void enqueueCharacter(char z)
    {
        Queue.push(z);
    }
    char popCharacter()
    {
        char top=Stack.top();
        Stack.pop();
        return top;
    }
    char dequeueCharacter()
    {
        char Front=Queue.front();
        Queue.pop();
        return Front;
    }
};

int main() {
   
    string s;
    getline(cin, s);
    
  	
    Solution obj;
    
   
    for (int i = 0; i < s.length(); i++) {
        obj.pushCharacter(s[i]);
        obj.enqueueCharacter(s[i]);
    }
    
    bool isPalindrome = true;
    
   
    for (int i = 0; i < s.length() / 2; i++) {
        if (obj.popCharacter() != obj.dequeueCharacter()) {
            isPalindrome = false;
            
            break;
        }
    }
    
   
    if (isPalindrome) {
        cout << "The word, " << s << ", is a palindrome.";
    } else {
        cout << "The word, " << s << ", is not a palindrome.";
    }
    
    return 0;
}
